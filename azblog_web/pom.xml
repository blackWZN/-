<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>azblog</artifactId>
        <groupId>com.wzn</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wzn</groupId>
    <artifactId>azblog_web</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!--模板引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!--整合WebSocket-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
    </dependencies>

    <!--部署docker配置-->
    <build>
        <finalName>app</finalName>
        <plugins>
            <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- docker的maven插件，官网： https://github.com/spotify/docker‐maven‐plugin -->
            <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.4.13</version>
            <configuration>
            <imageName>122.51.252.120:5000/${project.artifactId}:${project.version}</imageName>
            <baseImage>docker.io/rodrigozc/jdk8-filebeat-consul</baseImage>
            <entryPoint>["java", "‐jar","/${project.build.finalName}.jar"]</entryPoint>
            <resources>
            <resource>
            <targetPath>/</targetPath>
            <directory>${project.build.directory}
            </directory>
            <include>${project.build.finalName}.jar</include>
            </resource>
            </resources>
            <dockerHost>http://122.51.252.120:2375</dockerHost>
            </configuration>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>com.spotify</groupId>-->
                <!--<artifactId>docker-maven-plugin</artifactId>-->
                <!--<version>0.4.13</version>-->
                <!--<configuration>-->
                    <!--<forceTags>true</forceTags>    &lt;!&ndash;覆盖相同标签镜像&ndash;&gt;-->
                    <!--<imageName>${project.artifactId}</imageName>  &lt;!&ndash;指定镜像名称 仓库/镜像名:标签&ndash;&gt;-->
                    <!--<dockerHost>http://122.51.252.120:2375</dockerHost>  &lt;!&ndash; 指定仓库地址 &ndash;&gt;-->
                    <!--<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>   &lt;!&ndash;dockerfile文件路径&ndash;&gt;-->
                    <!--<resources>-->
                        <!--<resource>                                             &lt;!&ndash; 指定资源文件 &ndash;&gt;-->
                            <!--<targetPath>/</targetPath>                         &lt;!&ndash; 指定要复制的目录路径，这里是当前目录 &ndash;&gt;-->
                            <!--<directory>${project.build.directory}</directory>  &lt;!&ndash; 指定要复制的根目录，这里是target目录 &ndash;&gt;-->
                            <!--<include>${project.build.finalName}.jar</include>  &lt;!&ndash; 指定需要拷贝的文件，这里指最后生成的jar包 &ndash;&gt;-->
                        <!--</resource>-->
                    <!--</resources>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>

</project>